<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UNDX_refTreeMenu_refPermission__Title" xml:space="preserve">
    <value>The right has already been assigned to the menu</value>
  </data>
  <data name="ADM_GroupPermissions_UNDX_refGroup_refPermission" xml:space="preserve">
    <value>Right has already been assigned to a group</value>
  </data>
  <data name="ADM_UserPermissions_UNDX_refUser_refPermission" xml:space="preserve">
    <value>The right has already been assigned to the user</value>
  </data>
  <data name="CurrencyRateNotExists" xml:space="preserve">
    <value>Currency exchange rate {0} is not defined on date {1:d}</value>
  </data>
  <data name="CurrencyRowNotExists" xml:space="preserve">
    <value>Currency entry not found</value>
  </data>
  <data name="DIC_OutlookTemplates_UNDX_refOutlookTemplateType" xml:space="preserve">
    <value>There can only be one Outlook alert template per alert type</value>
  </data>
  <data name="FilterByApprovedAndSigned" xml:space="preserve">
    <value>The status of the contract must be approved and marked by Checker.</value>
  </data>
  <data name="FilterByExcludeAttrNotSet" xml:space="preserve">
    <value>The contract type is not specified, you must make an adjustment to the contract and approve it.</value>
  </data>
  <data name="FilterByExcludeClosed" xml:space="preserve">
    <value>Contract status must not be closed.</value>
  </data>
  <data name="Registry_UNDX_Number" xml:space="preserve">
    <value>Sequence No. must be unique</value>
  </data>
  <data name="Registry_UNDX_UNC" xml:space="preserve">
    <value>CC сatalogue number must be unique</value>
  </data>
  <data name="UNDX_BaseId" xml:space="preserve">
    <value>Customer BaseID field must be unique</value>
  </data>
  <data name="UNDX_Code" xml:space="preserve">
    <value>Code field must be unique</value>
  </data>
  <data name="UNDX_Code2Char" xml:space="preserve">
    <value>2-digit numeric code field must be unique</value>
  </data>
  <data name="UNDX_Code3Char" xml:space="preserve">
    <value>The 3-digit alphanumeric field must be unique</value>
  </data>
  <data name="UNDX_Code3Int" xml:space="preserve">
    <value>The 3-digit numeric field must be unique</value>
  </data>
  <data name="UNDX_CodeInt" xml:space="preserve">
    <value>Numeric code field must be unique</value>
  </data>
  <data name="UNDX_refClient_Email" xml:space="preserve">
    <value>Email address can not be repeated in customer contacts</value>
  </data>
  <data name="UNDX_refKNP_PaymentDirection" xml:space="preserve">
    <value>The value of the PPC and Payment Type fields can not be repeated</value>
  </data>
  <data name="UNDX_refKNP_PaymentDirection_Resident" xml:space="preserve">
    <value>The value of the PPC, Payment Type and Resident fields can not be repeated</value>
  </data>
  <data name="UserStamps_UNDX_refUser" xml:space="preserve">
    <value>You can only create one record for the user, make changes to the existing record</value>
  </data>
  <data name="ADM_GroupUsers_UNDX_refGroup_refUser" xml:space="preserve">
    <value>The user has already been added to the group</value>
  </data>
  <data name="MCC_ScreeningDocumentLinks_UNDX_refDocument_refScreeningDocument" xml:space="preserve">
    <value>Another user has just submitted documents for screening, please try again.</value>
  </data>
  <data name="MCC_ScreeningDocument_UNDX_refContract_SendDate" xml:space="preserve">
    <value>Another user has just submitted documents for screening, please try again.</value>
  </data>
  <data name="UNDX_HolidayDate" xml:space="preserve">
    <value>Information has already been entered into the calendar on the specified date, update the data on the page.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="NotSigned" xml:space="preserve">
    <value>Not signed</value>
  </data>
  <data name="TryLater" xml:space="preserve">
    <value>Send a request later</value>
  </data>
  <data name="NoDocument" xml:space="preserve">
    <value>No document</value>
  </data>
</root>